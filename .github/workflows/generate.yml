name: Generate Image

on:
  schedule:
    - cron: 0 0/1 * * *
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Remove not need dep
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const mahiroPkg = JSON.parse(fs.readFileSync('./mahiro/package.json', 'utf8'))
            delete mahiroPkg.devDependencies.mahiro
            fs.writeFileSync('./mahiro/package.json', JSON.stringify(mahiroPkg, null, 2))

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: pnpm i --no-frozen-lockfile

      - name: Prepare Bgm Data
        run: pnpm sync:bgm
        working-directory: ./mahiro

      - name: Cache HTML
        id: cache-html
        uses: actions/cache@v3
        with:
          path: render/common/dist/index.html
          key: ${{ runner.os }}-html-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Prepare HTML
        if: steps.cache-html.outputs.cache-hit != 'true'
        run: pnpm build
        working-directory: ./render/common

      - name: Generate Image
        run: pnpm copy && pnpm start --generate --compress
        working-directory: ./server

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "server/output.png"

      - name: Move Image
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          mkdir -p output
          mv server/output.png output/output.png

      - name: Deploy
        if: steps.check_files.outputs.files_exists == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: output
          publish_dir: ./output
          force_orphan: true

      - name: Upload Artifact
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output/output.png
          retention-days: 1
